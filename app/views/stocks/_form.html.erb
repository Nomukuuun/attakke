<%= form_with model: stock do |f| %>
  <div class="text-2xl font-bold text-f-head mt-8">ストックの保管場所</div>
  <div class="text-xl mb-6"><%= location.name %></div>
  <%= f.hidden_field :location_id, value: location.id %>

  <div class="flex flex-col mb-6">
    <%= f.label :name, class: "text-2xl font-bold text-f-head" %>
    <%= f.text_field :name, placeholder: "入力してください", size: 40, class: "bg-white border-black border rounded p-2" %>
  </div>

  <!-- stimulusを活用した非同期処理 -->
  <div data-controller="quantity-visibility">
    <%= f.label :model, class: "text-2xl font-bold text-f-head" %>
    <div class="grid grid-cols-3 auto-cols-min gap-2 mb-6">
      <%= f.radio_button :model, :existence, checked: true,
        data: { action: "quantity-visibility#changeModel", quantity_visibility_target: "existenceRadio" },
        id: "model_existence",
        class: "accent-dull-green" %>
      <p>チェックボックス</p>
      <p>チェックでストックを管理します</p>
      <%= f.radio_button :model, :number,
        data: { action: "quantity-visibility#changeModel", quantity_visibility_target: "numberRadio" },
        id: "model_number",
        class: "accent-dull-green" %>
      <p>残数表示</p>
      <p>残数でストックを管理します</p>
    </div>

    <%= f.fields_for :histories do |h| %>
      <div class="flex flex-col mb-6">
        <%= h.label :quantity, class: "text-2xl font-bold text-f-head" %>
      <%# DONE: JSを活用してradioの選択で表示される状態を変更、Exist型のアイコンでのquantityの制御 %>
        <!-- ラジオで選択されている型によって表示を切り替え -->
        <div class="" data-quantity-visibility-target="quantityExistField">
          <div class="flex items-center space-x-6">
            <%= image_tag "icon_checked.png", id: "iconImage",
              data: { action: "click->quantity-visibility#toggleIconImage", quantity_visibility_target: "iconImage" },
              class: "cursor-pointer" %>
            <p data-quantity-visibility-target="iconExplanation", class="text-xl">ストックあり</p>
          </div>
          <%= h.hidden_field :quantity, value: 1, data: { quantity_visibility_target: "hiddenQuantity" } %>
        </div>
        <div class="hidden" data-quantity-visibility-target="quantityNumField">
          <%= h.number_field :quantity, in: 0..100, class: "bg-white border-black border rounded p-2 h-12 w-16" %>
        </div>
      </div>

    <%# TODO: editアクションのときは更新前のstockの値と比較して決定するロジックをelse句で実装 %>
      <% if stock.name.nil? %>
      <%= h.hidden_field :status, value: :purchase %>
      <% end %>
      
      <%= h.hidden_field :recording_date, value: Date.today %>
    <% end %>
  </div>

  <div class="flex justify-between items-center">
    <%= f.submit "保存", class: "text-xl text-f-body bg-dull-red rounded p-4 " %>
    <%= link_to "ストック一覧に戻る", stocks_path, class: "hover:text-dull-green hover:border-b-2 border-dull-green" %>
  </div>
<% end %>
